"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9413],{2550:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>d});var n=r(4848),s=r(8453);const a={sidebar_position:2,title:"listHandlers"},l=void 0,i={id:"utils/list-handlers",title:"listHandlers",description:"commonListFulfilledHandler",source:"@site/docs/utils/list-handlers.md",sourceDirName:"utils",slug:"/utils/list-handlers",permalink:"/react-native-template-strong/docs/utils/list-handlers",draft:!1,unlisted:!1,editUrl:"https://github.com/svbutko/react-native-template-strong/master/website/docs/utils/list-handlers.md",tags:[],version:"current",lastUpdatedAt:1633280321e3,sidebarPosition:2,frontMatter:{sidebar_position:2,title:"listHandlers"},sidebar:"tutorialSidebar",previous:{title:"newState",permalink:"/react-native-template-strong/docs/utils/new-state"},next:{title:"URL openers",permalink:"/react-native-template-strong/docs/utils/url-openers"}},o={},d=[{value:"commonListFulfilledHandler",id:"commonlistfulfilledhandler",level:2}];function c(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"commonlistfulfilledhandler",children:"commonListFulfilledHandler"}),"\n",(0,n.jsxs)(t.p,{children:["Used primarily in redux slices' fulfilled functions to merge or replace the current list with new data based on ",(0,n.jsx)(t.code,{children:"LoadState"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["First parameter is ",(0,n.jsx)(t.code,{children:"LoadState"})," which comes as meta argument."]}),"\n",(0,n.jsx)(t.p,{children:"Second parameter is array of new items which comes as payload of API call or your changes."}),"\n",(0,n.jsx)(t.p,{children:"Third parameter is your current state data array."}),"\n",(0,n.jsxs)(t.p,{children:["As a result, it will produce merged or new array of data, will set ",(0,n.jsx)(t.code,{children:"error"})," to ",(0,n.jsx)(t.code,{children:"null"})," and will update ",(0,n.jsx)(t.code,{children:"LoadState"})," based on the payload array size."]}),"\n",(0,n.jsx)(t.p,{children:"Example of usage:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-typescript",children:"function ordersFulfilledHandler(state: OrdersState, payloadAction: OrdersGetPayloadAction) {\n    const {data, error, loadState} = commonListFulfilledHandler(payloadAction.meta.arg, payloadAction.payload.orders, state.data);\n\n    return newState(state, {loadState, error, data});\n}\n"})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>l,x:()=>i});var n=r(6540);const s={},a=n.createContext(s);function l(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);