"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9721],{3905:(t,e,n)=>{n.d(e,{Zo:()=>c,kt:()=>g});var o=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,o)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,o,r=function(t,e){if(null==t)return{};var n,o,r={},i=Object.keys(t);for(o=0;o<i.length;o++)n=i[o],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(o=0;o<i.length;o++)n=i[o],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var l=o.createContext({}),p=function(t){var e=o.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},c=function(t){var e=p(t.components);return o.createElement(l.Provider,{value:e},t.children)},d="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return o.createElement(o.Fragment,{},e)}},m=o.forwardRef((function(t,e){var n=t.components,r=t.mdxType,i=t.originalType,l=t.parentName,c=s(t,["components","mdxType","originalType","parentName"]),d=p(n),m=r,g=d["".concat(l,".").concat(m)]||d[m]||u[m]||i;return n?o.createElement(g,a(a({ref:e},c),{},{components:n})):o.createElement(g,a({ref:e},c))}));function g(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var i=n.length,a=new Array(i);a[0]=m;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=t,s[d]="string"==typeof t?t:r,a[1]=s;for(var p=2;p<i;p++)a[p]=n[p];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},944:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var o=n(7462),r=(n(7294),n(3905));const i={sidebar_position:4,title:"Roots"},a=void 0,s={unversionedId:"navigation/roots",id:"navigation/roots",title:"Roots",description:"Content",source:"@site/docs/navigation/roots.md",sourceDirName:"navigation",slug:"/navigation/roots",permalink:"/react-native-template-strong/docs/navigation/roots",draft:!1,editUrl:"https://github.com/svbutko/react-native-template-strong/master/website/docs/navigation/roots.md",tags:[],version:"current",lastUpdatedAt:1633518181,formattedLastUpdatedAt:"Oct 6, 2021",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"Roots"},sidebar:"tutorialSidebar",previous:{title:"Pages",permalink:"/react-native-template-strong/docs/navigation/pages"},next:{title:"Overlays and modals",permalink:"/react-native-template-strong/docs/navigation/overlays-and-modals"}},l={},p=[{value:"Content",id:"content",level:2},{value:"Starting root",id:"starting-root",level:2},{value:"Switching roots",id:"switching-roots",level:2}],c={toc:p},d="wrapper";function u(t){let{components:e,...n}=t;return(0,r.kt)(d,(0,o.Z)({},c,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"content"},"Content"),(0,r.kt)("p",null,"The root is where the application layout structure is defined. It is typically the first UI element a user interacts with. "),(0,r.kt)("p",null,"The root can be changed multiple times during the lifespan of the application. "),(0,r.kt)("p",null,"For example, if an app requires users to login, it's common to use a stack-based root and transition to either tabs- or SideMenu-based root if login is successful."),(0,r.kt)("p",null,"Roots are located in ",(0,r.kt)("inlineCode",{parentName:"p"},"src/navigation/roots.ts"),"."),(0,r.kt)("p",null,"Each root is being exported separately."),(0,r.kt)("h2",{id:"starting-root"},"Starting root"),(0,r.kt)("p",null,"The starting root is ",(0,r.kt)("inlineCode",{parentName:"p"},"setInitialRoot")," which shows ",(0,r.kt)("inlineCode",{parentName:"p"},"Splash"),"."),(0,r.kt)("h2",{id:"switching-roots"},"Switching roots"),(0,r.kt)("p",null,"As shown in ",(0,r.kt)("inlineCode",{parentName:"p"},"Splash")," based on whether user opened application first time or second time it switches the root to ",(0,r.kt)("inlineCode",{parentName:"p"},"tabs")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"onboarding"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"jsx",jsx:!0},"export const Splash: NavigationFunctionComponent = () => {\n  const isOnboardingVisited = useAppSelector((state) => state.system.isOnboardingVisited);\n\n  useEffect(() => {\n    if (isOnboardingVisited) {\n      setTabsRoot();\n    } else if (isIos) {\n      setTabsRoot(showOnboarding);\n    } else {\n      setOnboardingRoot();\n    }\n  }, [isOnboardingVisited]);\n\n  return <LoadingComponent />;\n};\n")))}u.isMDXComponent=!0}}]);