"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3922],{1526:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var s=t(5893),o=t(1151);const i={sidebar_position:1,title:"Fonts"},r=void 0,c={id:"resources/fonts",title:"Fonts",description:"Content",source:"@site/docs/resources/fonts.md",sourceDirName:"resources",slug:"/resources/fonts",permalink:"/react-native-template-strong/docs/resources/fonts",draft:!1,unlisted:!1,editUrl:"https://github.com/svbutko/react-native-template-strong/master/website/docs/resources/fonts.md",tags:[],version:"current",lastUpdatedAt:1633518181,formattedLastUpdatedAt:"Oct 6, 2021",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Fonts"},sidebar:"tutorialSidebar",previous:{title:"Hooks",permalink:"/react-native-template-strong/docs/redux/hooks"},next:{title:"Images",permalink:"/react-native-template-strong/docs/resources/images"}},l={},d=[{value:"Content",id:"content",level:2},{value:"Accessing fonts",id:"accessing-fonts",level:2},{value:"Adding fonts",id:"adding-fonts",level:2}];function a(e){const n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"content",children:"Content"}),"\n",(0,s.jsxs)(n.p,{children:["Currently, there is only a single font which is used, and it's ",(0,s.jsx)(n.code,{children:"system"}),".\nIt's a system font which is used on device."]}),"\n",(0,s.jsx)(n.h2,{id:"accessing-fonts",children:"Accessing fonts"}),"\n",(0,s.jsxs)(n.p,{children:["To access a font in your code, you need to use ",(0,s.jsx)(n.code,{children:"fonts.ts"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'export const Fonts = {\n  system: "System",\n};\n'})}),"\n",(0,s.jsx)(n.p,{children:"To use it you simply can create a style and use it like this:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",metastring:"jsx",children:"const styles = StyleSheet.create({\n  text: {\n    fontFamily: Fonts.system\n  } as TextStyle\n});\n"})}),"\n",(0,s.jsxs)(n.p,{children:["There's also a default combination of font styles which is stored in ",(0,s.jsx)(n.code,{children:"commonStyles"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"export const CommonStyles = StyleSheet.create({\n    normalText: {\n        fontFamily: Fonts.system,\n        fontSize: CommonSizes.font.medium,\n        lineHeight: CommonSizes.lineHeight.medium,\n        color: platformNativeColor(PlatformColorsIOS.label, PlatformColorsAndroid.primaryText),\n    } as TextStyle,\n});\n"})}),"\n",(0,s.jsx)(n.p,{children:"To use it you can simply call it like this:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",metastring:"jsx",children:"      <Text style={CommonStyles.normalText} numberOfLines={1}>\n        {localization.common.loading}\n      </Text>\n"})}),"\n",(0,s.jsx)(n.h2,{id:"adding-fonts",children:"Adding fonts"}),"\n",(0,s.jsx)(n.p,{children:"To add your custom fonts you need to do the following:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Place your ",(0,s.jsx)(n.code,{children:".ttf"})," or ",(0,s.jsx)(n.code,{children:".otf"})," font/s in ",(0,s.jsx)(n.code,{children:"resources/fonts"})," folder"]}),"\n",(0,s.jsxs)(n.li,{children:["Run ",(0,s.jsx)(n.code,{children:"react-native link"}),", it will add your fonts to native resources folders"]}),"\n",(0,s.jsxs)(n.li,{children:["Add your font inside ",(0,s.jsx)(n.code,{children:"Fonts"})]}),"\n",(0,s.jsx)(n.li,{children:"Rebuild your application"}),"\n",(0,s.jsx)(n.li,{children:"Use your newly added fonts"}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>r});var s=t(7294);const o={},i=s.createContext(o);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);