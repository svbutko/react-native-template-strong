"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[945],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=u(n),m=i,g=c["".concat(s,".").concat(m)]||c[m]||p[m]||o;return n?r.createElement(g,a(a({ref:t},d),{},{components:n})):r.createElement(g,a({ref:t},d))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var u=2;u<o;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},2586:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return p}});var r=n(7462),i=n(3366),o=(n(7294),n(3905)),a=["components"],l={sidebar_position:3,title:"Detox"},s=void 0,u={unversionedId:"testing/detox",id:"testing/detox",title:"Detox",description:"Content",source:"@site/docs/testing/detox.md",sourceDirName:"testing",slug:"/testing/detox",permalink:"/react-native-template-strong/docs/testing/detox",editUrl:"https://github.com/svbutko/react-native-template-strong/master/website/docs/testing/detox.md",tags:[],version:"current",lastUpdatedAt:1633684154,formattedLastUpdatedAt:"10/8/2021",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Detox"},sidebar:"tutorialSidebar",previous:{title:"Storybook",permalink:"/react-native-template-strong/docs/testing/storybook"},next:{title:"Types",permalink:"/react-native-template-strong/docs/types"}},d={},p=[{value:"Content",id:"content",level:2},{value:"Adding tests",id:"adding-tests",level:2},{value:"Running tests",id:"running-tests",level:2},{value:"iOS",id:"ios",level:3},{value:"Android",id:"android",level:3},{value:"Changing devices",id:"changing-devices",level:2}],c={toc:p};function m(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"content"},"Content"),(0,o.kt)("p",null,"Detox tests are e2e (end-to-end) tests which are testing your mobile app while running in a real device/simulator, interacting with it just like a real user."),(0,o.kt)("p",null,"To learn more about Detox, check ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/wix/Detox"},"this page"),"."),(0,o.kt)("p",null,"All the tests are located in ",(0,o.kt)("inlineCode",{parentName:"p"},"e2e"),"."),(0,o.kt)("p",null,"Each created test file should follow the next template: ",(0,o.kt)("inlineCode",{parentName:"p"},"testName.e2e.ts"),"."),(0,o.kt)("h2",{id:"adding-tests"},"Adding tests"),(0,o.kt)("p",null,"See how you can add tests ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/wix/Detox/blob/master/docs/Introduction.WritingFirstTest.md#step-3-add-testids-to-your-app-to-assist-in-matching-elements"},"here"),"."),(0,o.kt)("p",null,"There's already a simple test to check how well the initial running process works:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'import {expect} from "detox";\n\ndescribe("Startup", () => {\n  beforeAll(async () => {\n    await device.launchApp();\n  });\n\n  it("Is first run", async () => {\n    await expect(element(by.id("OnboardingButtonID"))).toBeVisible();\n    await element(by.id("OnboardingButtonID")).tap();\n  });\n\n  it("Should show tabs", async () => {\n    await expect(element(by.id("MainPageID"))).toExist();\n  });\n});\n\n')),(0,o.kt)("h2",{id:"running-tests"},"Running tests"),(0,o.kt)("p",null,"You can run your tests in ",(0,o.kt)("inlineCode",{parentName:"p"},"debug")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"release")," environments."),(0,o.kt)("p",null,"Before running them you have to build them."),(0,o.kt)("p",null,"To do so do run the following scripts:"),(0,o.kt)("h3",{id:"ios"},"iOS"),(0,o.kt)("p",null,"For debug:\n",(0,o.kt)("inlineCode",{parentName:"p"},"npm run e2e:ios-debug")),(0,o.kt)("p",null,"For release:\n",(0,o.kt)("inlineCode",{parentName:"p"},"npm run e2e:build-ios-release")),(0,o.kt)("p",null,"To run the tests:"),(0,o.kt)("p",null,"For debug:\n",(0,o.kt)("inlineCode",{parentName:"p"},"npm run e2e:ios-debug")),(0,o.kt)("p",null,"For release:\n",(0,o.kt)("inlineCode",{parentName:"p"},"npm run e2e:ios-release")),(0,o.kt)("h3",{id:"android"},"Android"),(0,o.kt)("p",null,"For debug:\n",(0,o.kt)("inlineCode",{parentName:"p"},"npm run e2e:build-android-debug")),(0,o.kt)("p",null,"For release:\n",(0,o.kt)("inlineCode",{parentName:"p"},"npm run e2e:build-android-release")),(0,o.kt)("p",null,"To run the tests:"),(0,o.kt)("p",null,"For debug:\n",(0,o.kt)("inlineCode",{parentName:"p"},"npm run e2e:android-debug")),(0,o.kt)("p",null,"For release:\n",(0,o.kt)("inlineCode",{parentName:"p"},"npm run e2e:android-release")),(0,o.kt)("h2",{id:"changing-devices"},"Changing devices"),(0,o.kt)("p",null,"Initially the config is using emulators to run the tests on both iOS and Android:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "devices": {\n    "simulator": {\n      "type": "ios.simulator",\n      "device": {\n        "type": "iPhone 12 Pro"\n      }\n    },\n    "emulator": {\n      "type": "android.emulator",\n      "device": {\n        "avdName": "Pixel_5_API_30"\n      }\n    }\n  },\n  "configurations": {\n    "ios.emu.debug": {\n      "device": "simulator",\n      "app": "ios.debug"\n    },\n    "ios.emu.release": {\n      "device": "simulator",\n      "app": "ios.release"\n    },\n    "android.emu.debug": {\n      "device": "emulator",\n      "app": "android.debug"\n    },\n    "android.emu.release": {\n      "device": "emulator",\n      "app": "android.release"\n    }\n  }\n}\n')),(0,o.kt)("p",null,"You can change it by adding your own emulators or real devices."),(0,o.kt)("p",null,"Check ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/wix/Detox/blob/master/docs/APIRef.Configuration.md#device-configurations"},"this page")," to see how it can be done."))}m.isMDXComponent=!0}}]);