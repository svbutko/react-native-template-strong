"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1486],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>v});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=s(n),d=a,v=c["".concat(p,".").concat(d)]||c[d]||u[d]||i;return n?r.createElement(v,o(o({ref:t},m),{},{components:n})):r.createElement(v,o({ref:t},m))}));function v(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7469:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:16,title:"Environments"},o=void 0,l={unversionedId:"environments",id:"environments",title:"Environments",description:"Work with environments made possible by react-native-config.",source:"@site/docs/environments.md",sourceDirName:".",slug:"/environments",permalink:"/react-native-template-strong/docs/environments",draft:!1,editUrl:"https://github.com/svbutko/react-native-template-strong/master/website/docs/environments.md",tags:[],version:"current",lastUpdatedAt:1687357876,formattedLastUpdatedAt:"Jun 21, 2023",sidebarPosition:16,frontMatter:{sidebar_position:16,title:"Environments"},sidebar:"tutorialSidebar",previous:{title:"Intl formatter",permalink:"/react-native-template-strong/docs/localisation/intl-formatter"},next:{title:"API",permalink:"/react-native-template-strong/docs/api"}},p={},s=[{value:"Content",id:"content",level:2},{value:"Usage",id:"usage",level:2},{value:"Change environment",id:"change-environment",level:2},{value:"Add more parameters",id:"add-more-parameters",level:2}],m={toc:s},c="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Work with environments made possible by ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/luggit/react-native-config"},"react-native-config"),"."),(0,a.kt)("h2",{id:"content"},"Content"),(0,a.kt)("p",null,"The application has 4 primitive environments:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},".env")," - Common"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},".env.dev")," - Development"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},".env.test")," - Test"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},".env.staging")," - Staging"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},".env.production")," - Production")),(0,a.kt)("p",null,"Each has a set of predefined values:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"API_URL")," - URL of you API"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"ENVIRONMENT")," - current selected environment"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"IGNORE_NET_INFO")," - ignore ",(0,a.kt)("inlineCode",{parentName:"li"},"NetInfo")," or not (useful while in development)")),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"To use environment variables you simply need to import ",(0,a.kt)("inlineCode",{parentName:"p"},"Config")," and use your parameters, like so:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'import Config from "react-native-config";\n\nConfig.ENVIRONMENT;\n')),(0,a.kt)("h2",{id:"change-environment"},"Change environment"),(0,a.kt)("p",null,"By default, ",(0,a.kt)("inlineCode",{parentName:"p"},".env")," (development) is selected environment,\nto change that you need to run one of the ",(0,a.kt)("a",{parentName:"p",href:"../docs/dependencies#environment-specific"},"scripts")," from ",(0,a.kt)("inlineCode",{parentName:"p"},"package.json"),"\nand rebuild your app."),(0,a.kt)("h2",{id:"add-more-parameters"},"Add more parameters"),(0,a.kt)("p",null,"To add more parameters, first you have to add them in types:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Open ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/svbutko/react-native-template-strong/blob/main/template/src/types/react-native-config.d.ts"},"react-native-config.d.ts")),(0,a.kt)("li",{parentName:"ul"},"Define your parameter with type inside ",(0,a.kt)("inlineCode",{parentName:"li"},"EnvironmentVariables"))),(0,a.kt)("p",null,"After that add your parameters with values into each ",(0,a.kt)("inlineCode",{parentName:"p"},".env")," file."),(0,a.kt)("p",null,"To see it into action you need to rebuild the application."))}u.isMDXComponent=!0}}]);