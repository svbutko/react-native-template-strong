"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[759],{3905:function(t,e,n){n.d(e,{Zo:function(){return u},kt:function(){return m}});var a=n(7294);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,a,o=function(t,e){if(null==t)return{};var n,a,o={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var s=a.createContext({}),c=function(t){var e=a.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},u=function(t){var e=c(t.components);return a.createElement(s.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},d=a.forwardRef((function(t,e){var n=t.components,o=t.mdxType,r=t.originalType,s=t.parentName,u=l(t,["components","mdxType","originalType","parentName"]),d=c(n),m=o,g=d["".concat(s,".").concat(m)]||d[m]||p[m]||r;return n?a.createElement(g,i(i({ref:e},u),{},{components:n})):a.createElement(g,i({ref:e},u))}));function m(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var r=n.length,i=new Array(r);i[0]=d;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=t,l.mdxType="string"==typeof t?t:o,i[1]=l;for(var c=2;c<r;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6968:function(t,e,n){n.r(e),n.d(e,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return p}});var a=n(7462),o=n(3366),r=(n(7294),n(3905)),i=["components"],l={sidebar_position:1,title:"Translations"},s=void 0,c={unversionedId:"localisation/translations",id:"localisation/translations",title:"Translations",description:"Localisation is made possible by react-native-localization.",source:"@site/docs/localisation/translations.md",sourceDirName:"localisation",slug:"/localisation/translations",permalink:"/react-native-template-strong/docs/localisation/translations",editUrl:"https://github.com/svbutko/react-native-template-strong/master/website/docs/localisation/translations.md",tags:[],version:"current",lastUpdatedAt:1633405147,formattedLastUpdatedAt:"10/5/2021",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Translations"},sidebar:"tutorialSidebar",previous:{title:"useWhyDidYouUpdate",permalink:"/react-native-template-strong/docs/hooks/use-why-did-you-update"},next:{title:"Add language",permalink:"/react-native-template-strong/docs/localisation/add-language"}},u={},p=[{value:"Content",id:"content",level:2},{value:"Usage",id:"usage",level:2},{value:"Translations structure",id:"translations-structure",level:2},{value:"Add translation",id:"add-translation",level:2},{value:"Default language",id:"default-language",level:2}],d={toc:p};function m(t){var e=t.components,n=(0,o.Z)(t,i);return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Localisation is made possible by ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/stefalda/ReactNativeLocalization"},"react-native-localization"),"."),(0,r.kt)("h2",{id:"content"},"Content"),(0,r.kt)("p",null,"Localization file are located at ",(0,r.kt)("inlineCode",{parentName:"p"},"/src/common/localization/localization.ts"),"."),(0,r.kt)("p",null,"It has translation methods and the constant object which holds all the translations:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"export const localization = {\n  common: new LocalizedStrings(commonLocalization),\n  errors: new LocalizedStrings(errorsLocalization),\n  empty: new LocalizedStrings(emptyLocalization),\n  pages: new LocalizedStrings(pagesLocalization),\n  onboarding: new LocalizedStrings(onboardingLocalization),\n};\n")),(0,r.kt)("p",null,"Translations itself are located in ",(0,r.kt)("inlineCode",{parentName:"p"},"/src/common/localization/translations"),"."),(0,r.kt)("p",null,"Each translation file is represented by simple constant object which holds languages as properties which hold translations strings."),(0,r.kt)("p",null,"Common localization:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'export const commonLocalization = {\n  en: {\n    search: "Search",\n    selectPhoto: "Select a photo",\n    takePhoto: "Take a photo",\n    chooseFromLibrary: "Choose from library",\n    cancel: "Cancel",\n    reject: "Reject",\n    delete: "Delete",\n    back: "Back",\n    next: "Next",\n    done: "Done",\n    ok: "Ok",\n    continue: "Continue",\n    save: "Save",\n    loading: "Loading",\n    photo: "Photo",\n    yes: "Yes",\n    no: "No",\n    areYouSure: "Are you sure?",\n    warning: "Warning",\n    success: "Success",\n    select: "Select",\n    dataSuccessfullyUpdated: "Data has been successfully updated",\n    settings: "Settings",\n  },\n};\n')),(0,r.kt)("p",null,"It can be string or function."),(0,r.kt)("p",null,"Function example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'    stops: (stopsCount: number) => {\n      return stopsCount + (stopsCount > 1 ? " stops" : " stop");\n    },\n    km: (distance: string | number) => {\n      return distance + " km";\n    },\n')),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("p",null,"Import the localization constant and use needed translation string:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"jsx",jsx:!0},"<Text style={CommonStyles.normalText} numberOfLines={1}>\n    {localization.common.loading}\n</Text>\n")),(0,r.kt)("h2",{id:"translations-structure"},"Translations structure"),(0,r.kt)("p",null,"The structure is pretty simple:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"commonLocalization.ts")," - contains common strings like yes, no, loading etc."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"emptyLocalization.ts")," - contains strings for empty cases like No data, nothing was found etc."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"errorsLocalization.ts")," - contains error related strings"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"pagesLocalization.ts")," - contains pages, tabs, modals, overlays titles")),(0,r.kt)("p",null,"Then there are pages specific localization strings:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"onboardingLocalization.ts")," - contains strings needed for Onboarding")),(0,r.kt)("h2",{id:"add-translation"},"Add translation"),(0,r.kt)("p",null,"Based on what your specific need is (page, common, error etc.) selected the translation file or create one if it's for a page."),(0,r.kt)("p",null,"If you created a file, don't forget to add it into ",(0,r.kt)("inlineCode",{parentName:"p"},"localization")," constant."),(0,r.kt)("p",null,"Then add a translation string to every language that you have."),(0,r.kt)("h2",{id:"default-language"},"Default language"),(0,r.kt)("p",null,"By default, there's only English language present in the template."),(0,r.kt)("p",null,"The first language which goes in translation files is going to be the default one."))}m.isMDXComponent=!0}}]);