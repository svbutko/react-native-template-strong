"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3922],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(n),d=o,f=u["".concat(l,".").concat(d)]||u[d]||m[d]||s;return n?r.createElement(f,a(a({ref:t},p),{},{components:n})):r.createElement(f,a({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,a=new Array(s);a[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:o,a[1]=i;for(var c=2;c<s;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3614:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const s={sidebar_position:1,title:"Fonts"},a=void 0,i={unversionedId:"resources/fonts",id:"resources/fonts",title:"Fonts",description:"Content",source:"@site/docs/resources/fonts.md",sourceDirName:"resources",slug:"/resources/fonts",permalink:"/react-native-template-strong/docs/resources/fonts",draft:!1,editUrl:"https://github.com/svbutko/react-native-template-strong/master/website/docs/resources/fonts.md",tags:[],version:"current",lastUpdatedAt:1633518181,formattedLastUpdatedAt:"Oct 6, 2021",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Fonts"},sidebar:"tutorialSidebar",previous:{title:"Hooks",permalink:"/react-native-template-strong/docs/redux/hooks"},next:{title:"Images",permalink:"/react-native-template-strong/docs/resources/images"}},l={},c=[{value:"Content",id:"content",level:2},{value:"Accessing fonts",id:"accessing-fonts",level:2},{value:"Adding fonts",id:"adding-fonts",level:2}],p={toc:c},u="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"content"},"Content"),(0,o.kt)("p",null,"Currently, there is only a single font which is used, and it's ",(0,o.kt)("inlineCode",{parentName:"p"},"system"),".\nIt's a system font which is used on device."),(0,o.kt)("h2",{id:"accessing-fonts"},"Accessing fonts"),(0,o.kt)("p",null,"To access a font in your code, you need to use ",(0,o.kt)("inlineCode",{parentName:"p"},"fonts.ts"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'export const Fonts = {\n  system: "System",\n};\n')),(0,o.kt)("p",null,"To use it you simply can create a style and use it like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"jsx",jsx:!0},"const styles = StyleSheet.create({\n  text: {\n    fontFamily: Fonts.system\n  } as TextStyle\n});\n")),(0,o.kt)("p",null,"There's also a default combination of font styles which is stored in ",(0,o.kt)("inlineCode",{parentName:"p"},"commonStyles"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"export const CommonStyles = StyleSheet.create({\n    normalText: {\n        fontFamily: Fonts.system,\n        fontSize: CommonSizes.font.medium,\n        lineHeight: CommonSizes.lineHeight.medium,\n        color: platformNativeColor(PlatformColorsIOS.label, PlatformColorsAndroid.primaryText),\n    } as TextStyle,\n});\n")),(0,o.kt)("p",null,"To use it you can simply call it like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"jsx",jsx:!0},"      <Text style={CommonStyles.normalText} numberOfLines={1}>\n        {localization.common.loading}\n      </Text>\n")),(0,o.kt)("h2",{id:"adding-fonts"},"Adding fonts"),(0,o.kt)("p",null,"To add your custom fonts you need to do the following:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Place your ",(0,o.kt)("inlineCode",{parentName:"li"},".ttf")," or ",(0,o.kt)("inlineCode",{parentName:"li"},".otf")," font/s in ",(0,o.kt)("inlineCode",{parentName:"li"},"resources/fonts")," folder"),(0,o.kt)("li",{parentName:"ul"},"Run ",(0,o.kt)("inlineCode",{parentName:"li"},"react-native link"),", it will add your fonts to native resources folders"),(0,o.kt)("li",{parentName:"ul"},"Add your font inside ",(0,o.kt)("inlineCode",{parentName:"li"},"Fonts")),(0,o.kt)("li",{parentName:"ul"},"Rebuild your application"),(0,o.kt)("li",{parentName:"ul"},"Use your newly added fonts")))}m.isMDXComponent=!0}}]);