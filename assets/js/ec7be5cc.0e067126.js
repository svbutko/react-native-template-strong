"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8471],{7719:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var a=n(5893),r=n(1151);const s={sidebar_position:4,title:"Date formatter"},o=void 0,i={id:"localisation/date-formatter",title:"Date formatter",description:"Content",source:"@site/docs/localisation/date-formatter.md",sourceDirName:"localisation",slug:"/localisation/date-formatter",permalink:"/react-native-template-strong/docs/localisation/date-formatter",draft:!1,unlisted:!1,editUrl:"https://github.com/svbutko/react-native-template-strong/master/website/docs/localisation/date-formatter.md",tags:[],version:"current",lastUpdatedAt:1634101010,formattedLastUpdatedAt:"Oct 13, 2021",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"Date formatter"},sidebar:"tutorialSidebar",previous:{title:"Change language",permalink:"/react-native-template-strong/docs/localisation/change-language"},next:{title:"Intl formatter",permalink:"/react-native-template-strong/docs/localisation/intl-formatter"}},d={},c=[{value:"Content",id:"content",level:2},{value:"Usage",id:"usage",level:2},{value:"Check how it looks",id:"check-how-it-looks",level:2}];function l(e){const t={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h2,{id:"content",children:"Content"}),"\n",(0,a.jsx)(t.p,{children:"Contains date converters and date formatters based on current language."}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"DateFormat"})," - enum of possible formats you can use (you can add you own)"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"dateFromString"})," - tries to convert string represented as date to ",(0,a.jsx)(t.code,{children:"Date"})]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"dateFromUnknown"})," - tries to convert any type possibly represented as date to ",(0,a.jsx)(t.code,{children:"Date"})]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"dateFromFormat"})," - takes date and format and returns the formatted string"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"calendarDate"})," - takes date and formats it to calendar (tomorrow, yesterday, today etc.) date and returns the formatted string"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"getUnixDate"})," - returns given date as ",(0,a.jsx)(t.code,{children:"unix"})," number"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"getInitialDate"})," - takes the date if it exists and returns it otherwise if the date is equal to null returns ",(0,a.jsx)(t.code,{children:"defaultDate"})," or current date"]}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"dateFromString"}),":"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-typescript",children:'dateFromString("2021-10-01");\n//2021-10-01T00:00:00.000Z as Date\n'})}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"dateFromUnknown"}),":"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-typescript",children:"dateFromUnknown(1234567891011);\n//2009-02-13T23:31:31.011Z as Date\n"})}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"dateFromFormat"}),":"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-typescript",children:"dateFromFormat(new Date(), DateFormat.yearDateTime);\n//2021.10.04 12:13\n\ndateFromFormat(new Date(), DateFormat.shortMonthYear);\n//Oct 2021\n"})}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"calendarDate"}),":"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-typescript",children:"calendarDate(new Date());\n//Today at 12:14 PM\n\ncalendarDate(new Date(), true)\n//Today\n"})}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"getUnixDate"}),":"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-typescript",children:"getUnixDate(new Date());\n//1633338938000\n"})}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"getInitialDate"}),":"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-typescript",children:'getInitialDate(new Date());\n// 2021-10-04T09:16:17.565Z\n\ngetInitialDate(null, new Date("2012-10-01"));\n//2012-10-01T00:00:00.000Z\n'})}),"\n",(0,a.jsx)(t.h2,{id:"check-how-it-looks",children:"Check how it looks"}),"\n",(0,a.jsxs)(t.p,{children:["You can open StoryBook and open ",(0,a.jsx)(t.code,{children:"Format"})," -> ",(0,a.jsx)(t.code,{children:"Date Formats"})," and ",(0,a.jsx)(t.code,{children:"Date Formats Enum"})," stories and see how they are being applied."]})]})}function h(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>i,a:()=>o});var a=n(7294);const r={},s=a.createContext(r);function o(e){const t=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),a.createElement(s.Provider,{value:t},e.children)}}}]);