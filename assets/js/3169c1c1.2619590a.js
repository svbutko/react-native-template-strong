"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7831],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return u}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),d=c(n),u=o,h=d["".concat(s,".").concat(u)]||d[u]||p[u]||r;return n?a.createElement(h,i(i({ref:t},m),{},{components:n})):a.createElement(h,i({ref:t},m))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<r;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1648:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return p}});var a=n(7462),o=n(3366),r=(n(7294),n(3905)),i=["components"],l={sidebar_position:2,title:"Native colors"},s=void 0,c={unversionedId:"themes/native-colors",id:"themes/native-colors",title:"Native colors",description:"Content",source:"@site/docs/themes/native-colors.md",sourceDirName:"themes",slug:"/themes/native-colors",permalink:"/react-native-template-strong/docs/themes/native-colors",editUrl:"https://github.com/svbutko/react-native-template-strong/master/website/docs/themes/native-colors.md",tags:[],version:"current",lastUpdatedAt:1633518181,formattedLastUpdatedAt:"10/6/2021",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Native colors"},sidebar:"tutorialSidebar",previous:{title:"Colors",permalink:"/react-native-template-strong/docs/themes/colors"},next:{title:"Component styles",permalink:"/react-native-template-strong/docs/styles/component-styles"}},m={},p=[{value:"Content",id:"content",level:2},{value:"Android",id:"android",level:2},{value:"Content",id:"content-1",level:3},{value:"Usage",id:"usage",level:3},{value:"Add colors",id:"add-colors",level:3},{value:"Native theme constants",id:"native-theme-constants",level:3},{value:"iOS",id:"ios",level:2},{value:"Content",id:"content-2",level:3},{value:"Usage",id:"usage-1",level:3},{value:"Add colors",id:"add-colors-1",level:3},{value:"Native theme constants",id:"native-theme-constants-1",level:3}],d={toc:p};function u(e){var t=e.components,n=(0,o.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"content"},"Content"),(0,r.kt)("p",null,"Native colors are used to work with ",(0,r.kt)("inlineCode",{parentName:"p"},"dark")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"light")," themes of your application."),(0,r.kt)("p",null,"There are some predefined (Android) and built-in (iOS) color names which are listed as enums in ",(0,r.kt)("inlineCode",{parentName:"p"},"src/core/theme/colors.ts")),(0,r.kt)("p",null,"It's highly recommended to use native colors opposed to JS defined ones to present better user experience with ",(0,r.kt)("inlineCode",{parentName:"p"},"dark")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"light")," themes"),(0,r.kt)("h2",{id:"android"},"Android"),(0,r.kt)("h3",{id:"content-1"},"Content"),(0,r.kt)("p",null,"There are two sets of colors defined in native resources:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"/android/app/src/main/res/values/colors.xml")," - for light theme"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"/android/app/src/main/res/values-night/colors.xml")," - for dark theme")),(0,r.kt)("p",null,"They look like this (light theme colors e.g.):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0" encoding="utf-8"?>\n<resources>\n    <item name="primary" type="color">#61DAFB</item>\n    <item name="primaryDark" type="color">#2596BE</item>\n    <item name="primaryLight" type="color">#B3E5FC</item>\n    <item name="background" type="color">#FFFFFF</item>\n    <item name="primaryText" type="color">#212121</item>\n    <item name="primaryTextOpacity" type="color">#CC212121</item>\n    <item name="secondaryText" type="color">#757575</item>\n    <item name="onPrimaryText" type="color">#FFFFFF</item>\n    <item name="onPrimaryTextOpacity" type="color">#CCFFFFFF</item>\n    <item name="divider" type="color">#BDBDBD</item>\n    <item name="navigation" type="color">#61DAFB</item>\n    <item name="statusbar" type="color">#0288D1</item>\n</resources>\n\n')),(0,r.kt)("p",null,"For both themes this colors share the same set of items (names) but can have different color values."),(0,r.kt)("p",null,"In React Native they are represented as ",(0,r.kt)("inlineCode",{parentName:"p"},"PlatformColorsAndroid")," enum in ",(0,r.kt)("inlineCode",{parentName:"p"},"src/core/theme/colors.ts"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'export enum PlatformColorsAndroid {\n  primary = "@color/primary",\n  primaryDark = "@color/primaryDark",\n  primaryLight = "@color/primaryLight",\n  background = "@color/background",\n  primaryText = "@color/primaryText",\n  primaryTextOpacity = "@color/primaryTextOpacity",\n  secondaryText = "@color/secondaryText",\n  onPrimaryText = "@color/onPrimaryText",\n  onPrimaryTextOpacity = "@color/onPrimaryTextOpacity",\n  divider = "@color/divider",\n  navigation = "@color/navigation",\n  statusbar = "@color/statusbar",\n}\n')),(0,r.kt)("h3",{id:"usage"},"Usage"),(0,r.kt)("p",null,"It's not enough to directly use this colors sam way as ones from ",(0,r.kt)("inlineCode",{parentName:"p"},"Colors")," enum."),(0,r.kt)("p",null,"You can use them in styles in multiple ways:"),(0,r.kt)("p",null,"1) Using ",(0,r.kt)("inlineCode",{parentName:"p"},"PlatformColor")," in mix with ",(0,r.kt)("inlineCode",{parentName:"p"},"Platform.select")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const styles = StyleSheet.create({\n  container: {\n    ...Platform.select({\n      android: {\n        backgroundColor: PlatformColor(PlatformColorsAndroid.background),\n      } as ViewStyle,\n    }),\n  } as ViewStyle,\n});\n")),(0,r.kt)("p",null,"2) Using ",(0,r.kt)("a",{parentName:"p",href:"/react-native-template-strong/docs/helpers/color-helpers"},"platformNativeColor")," or ",(0,r.kt)("a",{parentName:"p",href:"/react-native-template-strong/docs/helpers/color-helpers"},"platformMixedColor"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const styles = StyleSheet.create({\n  container: {\n    backgroundColor: platformNativeColor(PlatformColorsIOS.systemBackground, PlatformColorsAndroid.background),\n  } as ViewStyle,\n});\n")),(0,r.kt)("p",null,"3) To assign native colors in navigation, assign them directly, not separately:"),(0,r.kt)("div",{className:"admonition admonition-danger alert alert--danger"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"Incorrect")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"    topBar: {\n      background: {\n        color: {\n          light: PlatformColor(PlatformColorsAndroid.navigation),\n          darK: PlatformColor(PlatformColorsAndroid.navigation),\n        },\n      },\n    }\n")))),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Correct")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"    topBar: {\n        background: {\n            color: platformNativeColor(PlatformColorsIOS.systemBackground, PlatformColorsAndroid.navigation),\n        },\n    }\n")))),(0,r.kt)("h3",{id:"add-colors"},"Add colors"),(0,r.kt)("p",null,"To add more native colors:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Create ",(0,r.kt)("inlineCode",{parentName:"li"},"item")," in both ",(0,r.kt)("inlineCode",{parentName:"li"},"/android/app/src/main/res/values/colors.xml")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"/android/app/src/main/res/values-night/colors.xml"),"\nwith the same name"),(0,r.kt)("li",{parentName:"ul"},"Add your new color name in ",(0,r.kt)("inlineCode",{parentName:"li"},"PlatformColorsAndroid")),(0,r.kt)("li",{parentName:"ul"},"Rebuild your application")),(0,r.kt)("h3",{id:"native-theme-constants"},"Native theme constants"),(0,r.kt)("p",null,"There are some native theme constants which you can change.\nThese constants change things like ",(0,r.kt)("inlineCode",{parentName:"p"},"tint"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"status bar")," colors on native side."),(0,r.kt)("p",null,"They are located in:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"/android/app/src/main/res/values/styles.xml")," - for light theme"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"/android/app/src/main/res/values-night/styles.xml")," - for dark theme")),(0,r.kt)("p",null,"And look like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0" encoding="utf-8"?>\n\n<resources>\n    <style name="AppTheme" parent="Theme.AppCompat.Light.NoActionBar">\n        \x3c!-- Customize your theme here. --\x3e\n        <item name="android:windowBackground">@color/background</item>\n        <item name="android:statusBarColor">@color/statusbar</item>\n        <item name="colorAccent">@color/primary</item>\n    </style>\n\n    <style name="SplashTheme" parent="Theme.AppCompat.Light.NoActionBar">\n        <item name="android:windowBackground">@drawable/splash_background</item>\n        <item name="android:statusBarColor">@color/statusbar</item>\n    </style>\n</resources>\n')),(0,r.kt)("p",null,"Our app's theme is defined within style ",(0,r.kt)("inlineCode",{parentName:"p"},"AppTheme"),"."),(0,r.kt)("p",null,"You can see that there's a ",(0,r.kt)("inlineCode",{parentName:"p"},"colorAccent")," assigned to our ",(0,r.kt)("inlineCode",{parentName:"p"},"@color/primary"),", this change can be seen in dialogs, alerts and other components."),(0,r.kt)("p",null,"Same goes with ",(0,r.kt)("inlineCode",{parentName:"p"},"android:statusBarColor")," which sets the color of ",(0,r.kt)("inlineCode",{parentName:"p"},"status bar"),"."),(0,r.kt)("p",null,"To check other constant names you can adjust, check Android related resources regarding your components which you'd like to modify."),(0,r.kt)("h2",{id:"ios"},"iOS"),(0,r.kt)("h3",{id:"content-2"},"Content"),(0,r.kt)("p",null,"iOS already has some predefined colors for us, you can check how they look and change with ",(0,r.kt)("inlineCode",{parentName:"p"},"dark")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"light")," theme in Storybook's colors page."),(0,r.kt)("h3",{id:"usage-1"},"Usage"),(0,r.kt)("p",null,"It's not enough to directly use this colors sam way as ones from ",(0,r.kt)("inlineCode",{parentName:"p"},"Colors")," enum."),(0,r.kt)("p",null,"You can use them in styles in multiple ways:"),(0,r.kt)("p",null,"1) Using ",(0,r.kt)("inlineCode",{parentName:"p"},"PlatformColor")," in mix with ",(0,r.kt)("inlineCode",{parentName:"p"},"Platform.select")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const styles = StyleSheet.create({\n  container: {\n    ...Platform.select({\n      iOS: {\n        backgroundColor: PlatformColor(PlatformColorsIOS.systemBackground),\n      } as ViewStyle,\n    }),\n  } as ViewStyle,\n});\n")),(0,r.kt)("p",null,"2) Using ",(0,r.kt)("a",{parentName:"p",href:"/react-native-template-strong/docs/helpers/color-helpers"},"platformNativeColor")," or ",(0,r.kt)("a",{parentName:"p",href:"/react-native-template-strong/docs/helpers/color-helpers"},"platformMixedColor"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const styles = StyleSheet.create({\n  container: {\n    backgroundColor: platformNativeColor(PlatformColorsIOS.systemBackground, PlatformColorsAndroid.background),\n  } as ViewStyle,\n});\n")),(0,r.kt)("p",null,"3) To assign native colors in navigation, assign them directly, not separately:"),(0,r.kt)("div",{className:"admonition admonition-danger alert alert--danger"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"Incorrect")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"    topBar: {\n      background: {\n        color: {\n          light: PlatformColor(PlatformColorsIOS.systemBackground),\n          darK: PlatformColor(PlatformColorsIOS.systemBackground),\n        },\n      },\n    }\n")))),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Correct")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"    topBar: {\n        background: {\n            color: platformNativeColor(PlatformColorsIOS.systemBackground, PlatformColorsAndroid.navigation),\n        },\n    }\n")))),(0,r.kt)("h3",{id:"add-colors-1"},"Add colors"),(0,r.kt)("p",null,"At this moment you can't add your colors natively, but you can define your own colors in a separate enum and use ",(0,r.kt)("a",{parentName:"p",href:"https://reactnative.dev/docs/dynamiccolorios"},"DynamicColorIOS"),"."),(0,r.kt)("p",null,"But it would be better to stick to built-in colors to provide better user experience for users."),(0,r.kt)("h3",{id:"native-theme-constants-1"},"Native theme constants"),(0,r.kt)("p",null,"You can define ",(0,r.kt)("inlineCode",{parentName:"p"},"AccentColor")," of your application for both ",(0,r.kt)("inlineCode",{parentName:"p"},"light")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"dark")," themes in XCode:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Open .xcworkspace file"),(0,r.kt)("li",{parentName:"ul"},"Navigate to Images.xcassets where you'll see your app and splash icons and ",(0,r.kt)("inlineCode",{parentName:"li"},"AccentColor")," which you can change")))}u.isMDXComponent=!0}}]);