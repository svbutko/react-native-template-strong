"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[880],{8273:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>r,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var s=n(5893),o=n(1151);const i={sidebar_position:1,title:"Component styles"},r=void 0,l={id:"styles/component-styles",title:"Component styles",description:"Content",source:"@site/docs/styles/component-styles.md",sourceDirName:"styles",slug:"/styles/component-styles",permalink:"/react-native-template-strong/docs/styles/component-styles",draft:!1,unlisted:!1,editUrl:"https://github.com/svbutko/react-native-template-strong/master/website/docs/styles/component-styles.md",tags:[],version:"current",lastUpdatedAt:1633405147,formattedLastUpdatedAt:"Oct 5, 2021",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Component styles"},sidebar:"tutorialSidebar",previous:{title:"Native colors",permalink:"/react-native-template-strong/docs/themes/native-colors"},next:{title:"Common styles",permalink:"/react-native-template-strong/docs/styles/common-styles"}},a={},c=[{value:"Content",id:"content",level:2},{value:"Creating",id:"creating",level:2},{value:"Merging",id:"merging",level:2},{value:"Usage",id:"usage",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"content",children:"Content"}),"\n",(0,s.jsx)(t.p,{children:"Component styles are stored withing its own file at the very bottom of it"}),"\n",(0,s.jsxs)(t.p,{children:["The conventional method of creating styles for components is by using ",(0,s.jsx)(t.a,{href:"https://reactnative.dev/docs/stylesheet",children:"StyleSheet.create"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"creating",children:"Creating"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-typescript",children:'const styles = StyleSheet.create({\n  container: {\n    padding: CommonSizes.spacing.medium,\n  } as ViewStyle,\n  title: {\n    fontWeight: "600",\n    textAlign: "center",\n    marginBottom: CommonSizes.spacing.extraSmall,\n  } as TextStyle,\n  description: {\n    textAlign: "center",\n  } as TextStyle,\n});\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Every style has to be assigned to its proper interface (",(0,s.jsx)(t.code,{children:"ViewStyle"}),", ",(0,s.jsx)(t.code,{children:"TextStyle"}),", ",(0,s.jsx)(t.code,{children:"ImageStyle"})," etc.) to have proper types and validations by TypeScript."]}),"\n",(0,s.jsx)(t.h2,{id:"merging",children:"Merging"}),"\n",(0,s.jsx)(t.p,{children:"To merge styles simply use spread operator like so:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-typescript",children:'const styles = StyleSheet.create({\n  container: {\n    ...CommonStyles.flexCenter,\n    padding: CommonSizes.spacing.medium,\n  } as ViewStyle,\n  title: {\n    ...CommonStyles.normalText,\n    fontWeight: "600",\n    textAlign: "center",\n    marginBottom: CommonSizes.spacing.extraSmall,\n  } as TextStyle,\n  description: {\n    ...CommonStyles.normalText,\n    textAlign: "center",\n  } as TextStyle,\n});\n'})}),"\n",(0,s.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(t.p,{children:"Use the styles constant and appropriate parameter like so:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-typescript",metastring:"jsx",children:"    <View style={styles.container}>\n      <Text style={styles.title}>{title}</Text>\n      <Text style={styles.description}>{description}</Text>\n    </View>\n"})})]})}function p(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>l,a:()=>r});var s=n(7294);const o={},i=s.createContext(o);function r(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);