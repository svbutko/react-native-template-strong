"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4469],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),g=a,m=u["".concat(l,".").concat(g)]||u[g]||d[g]||o;return n?r.createElement(m,i(i({ref:t},p),{},{components:n})):r.createElement(m,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=g;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},5520:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:1,title:"Jest"},i=void 0,s={unversionedId:"testing/jest",id:"testing/jest",title:"Jest",description:"Content",source:"@site/docs/testing/jest.md",sourceDirName:"testing",slug:"/testing/jest",permalink:"/react-native-template-strong/docs/testing/jest",draft:!1,editUrl:"https://github.com/svbutko/react-native-template-strong/master/website/docs/testing/jest.md",tags:[],version:"current",lastUpdatedAt:1633684154,formattedLastUpdatedAt:"Oct 8, 2021",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Jest"},sidebar:"tutorialSidebar",previous:{title:"API",permalink:"/react-native-template-strong/docs/api"},next:{title:"Storybook",permalink:"/react-native-template-strong/docs/testing/storybook"}},l={},c=[{value:"Content",id:"content",level:2},{value:"Adding tests",id:"adding-tests",level:2},{value:"Running tests",id:"running-tests",level:2},{value:"Mocks",id:"mocks",level:2},{value:"Coverage",id:"coverage",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"content"},"Content"),(0,a.kt)("p",null,"Jest tests are simple and target mostly API communication and methods and functions stability and correctness of execution."),(0,a.kt)("p",null,"To learn more about Jest, check ",(0,a.kt)("a",{parentName:"p",href:"https://jestjs.io"},"this page"),"."),(0,a.kt)("p",null,"All the tests are located in ",(0,a.kt)("inlineCode",{parentName:"p"},"__tests__"),"."),(0,a.kt)("p",null,"Each created test file should follow the next template: ",(0,a.kt)("inlineCode",{parentName:"p"},"testName.test.ts"),"."),(0,a.kt)("h2",{id:"adding-tests"},"Adding tests"),(0,a.kt)("p",null,"To add a test, create a file by following previously mentioned template."),(0,a.kt)("p",null,"Describe your tests like so (I'll use localization as example):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'describe("Localization", () => {\n\n});\n')),(0,a.kt)("p",null,"And add tests itself:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'  test("Current language: EN", () => {\n    expect(getLanguage()).toBe("en");\n  });\n\n  test("Current interface language: EN", () => {\n    expect(getInterfaceLanguage()).toBe("en");\n  });\n\n  test("Set empty language", () => {\n    setLanguage();\n    expect(getLanguage()).toBe("en");\n  });\n\n  test("Set language: EN", () => {\n    setLanguage(Languages.en);\n    expect(getLanguage()).toBe("en");\n  });\n')),(0,a.kt)("h2",{id:"running-tests"},"Running tests"),(0,a.kt)("p",null,"You can run individual tests while debugging them in your IDE or if you want to run every single described test you can simply run:\n",(0,a.kt)("inlineCode",{parentName:"p"},"npm run tests"),". Which will show you ",(0,a.kt)("inlineCode",{parentName:"p"},"PASSSED")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"FAILED")," tests."),(0,a.kt)("h2",{id:"mocks"},"Mocks"),(0,a.kt)("p",null,"Some dependencies or environments require you to be mocked since tests are not running in React Native environment but NodeJS."),(0,a.kt)("p",null,"For these cases there is a folder called ",(0,a.kt)("inlineCode",{parentName:"p"},"__mocks__"),"."),(0,a.kt)("p",null,"There's already a simple mock of ",(0,a.kt)("inlineCode",{parentName:"p"},"Localization"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import LocalizedStringsCore from "react-localization";\n\nfunction getInterfaceLanguage() {\n  return "en";\n}\n\nexport default class LocalizedStrings extends LocalizedStringsCore {\n  constructor(props) {\n    super(props, getInterfaceLanguage);\n  }\n}\n')),(0,a.kt)("p",null,"It defines that default and used language will be English without trying to get it from the system."),(0,a.kt)("p",null,'Then this mock is "imported" or better to say "mocked" in ',(0,a.kt)("inlineCode",{parentName:"p"},"__tests__/localization.test.ts"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'jest.mock("react-native-localization");\n')),(0,a.kt)("h2",{id:"coverage"},"Coverage"),(0,a.kt)("p",null,"To check how well you covered files with test you can see it using coverage."),(0,a.kt)("p",null,"Run ",(0,a.kt)("inlineCode",{parentName:"p"},"npm run tests:coverage"),"."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"coverege")," folder will appear which will give you HTML pages with detailed information, also there will be a print into terminal after the command will be executed."))}d.isMDXComponent=!0}}]);