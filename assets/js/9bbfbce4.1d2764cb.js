"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3845],{3905:function(t,e,n){n.d(e,{Zo:function(){return c},kt:function(){return g}});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},o=Object.keys(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var p=a.createContext({}),m=function(t){var e=a.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},c=function(t){var e=m(t.components);return a.createElement(p.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},s=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,o=t.originalType,p=t.parentName,c=l(t,["components","mdxType","originalType","parentName"]),s=m(n),g=r,u=s["".concat(p,".").concat(g)]||s[g]||d[g]||o;return n?a.createElement(u,i(i({ref:e},c),{},{components:n})):a.createElement(u,i({ref:e},c))}));function g(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=n.length,i=new Array(o);i[0]=s;var l={};for(var p in e)hasOwnProperty.call(e,p)&&(l[p]=e[p]);l.originalType=t,l.mdxType="string"==typeof t?t:r,i[1]=l;for(var m=2;m<o;m++)i[m]=n[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},5453:function(t,e,n){n.r(e),n.d(e,{assets:function(){return c},contentTitle:function(){return p},default:function(){return g},frontMatter:function(){return l},metadata:function(){return m},toc:function(){return d}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],l={sidebar_position:14,title:"ImageCropPickerButton"},p=void 0,m={unversionedId:"components/image-crop-picker-button",id:"components/image-crop-picker-button",title:"ImageCropPickerButton",description:"Content",source:"@site/docs/components/image-crop-picker-button.md",sourceDirName:"components",slug:"/components/image-crop-picker-button",permalink:"/react-native-template-strong/docs/components/image-crop-picker-button",editUrl:"https://github.com/svbutko/react-native-template-strong/master/website/docs/components/image-crop-picker-button.md",tags:[],version:"current",lastUpdatedAt:1634026274,formattedLastUpdatedAt:"10/12/2021",sidebarPosition:14,frontMatter:{sidebar_position:14,title:"ImageCropPickerButton"},sidebar:"tutorialSidebar",previous:{title:"PhotoTakingButton",permalink:"/react-native-template-strong/docs/components/photo-taking-button"},next:{title:"DatePickerOverlay",permalink:"/react-native-template-strong/docs/components/date-picker-overlay"}},c={},d=[{value:"Content",id:"content",level:2},{value:"Params",id:"params",level:2},{value:"Usage example",id:"usage-example",level:2}],s={toc:d};function g(t){var e=t.components,n=(0,r.Z)(t,i);return(0,o.kt)("wrapper",(0,a.Z)({},s,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"content"},"Content"),(0,o.kt)("p",null,"Image crop picker button which provides a dialog to user to photo selection or image taking or removing existing one and also showing the result to user."),(0,o.kt)("p",null,"If image is not selected it will show a button with icon."),(0,o.kt)("p",null,"Uses ",(0,o.kt)("inlineCode",{parentName:"p"},"PhotoTakingButton")," as button component."),(0,o.kt)("p",null,"Uses ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/ivpusic/react-native-image-crop-picker"},"react-native-image-crop-picker")," for image picking. "),(0,o.kt)("h2",{id:"params"},"Params"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"onImagePicked"),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"(image: CropperImage) => void")),(0,o.kt)("td",{parentName:"tr",align:"left"},"True"),(0,o.kt)("td",{parentName:"tr",align:"left"},"-"),(0,o.kt)("td",{parentName:"tr",align:"left"},"On image picked callback")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"onRemoveImage"),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"() => void")),(0,o.kt)("td",{parentName:"tr",align:"left"},"True"),(0,o.kt)("td",{parentName:"tr",align:"left"},"-"),(0,o.kt)("td",{parentName:"tr",align:"left"},"On remove image callback")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"onPickerError"),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"(error: Error) => void")),(0,o.kt)("td",{parentName:"tr",align:"left"},"False"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Undefined"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Callback with error when something went wrong")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"image"),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"ImageURISource or null")),(0,o.kt)("td",{parentName:"tr",align:"left"},"False"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Undefined"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Selected image which will be shown and used")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"icon"),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"ImageURISource")),(0,o.kt)("td",{parentName:"tr",align:"left"},"False"),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"ImageResources.camera")),(0,o.kt)("td",{parentName:"tr",align:"left"},"Icon which will be shown when image is not present and over the selected image")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"style"),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"ViewStyle")),(0,o.kt)("td",{parentName:"tr",align:"left"},"False"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Undefined"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Style of button")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"iconStyle"),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"ImageStyle")),(0,o.kt)("td",{parentName:"tr",align:"left"},"False"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Undefined"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Style of icon")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"imageStyle"),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"ImageStyle")),(0,o.kt)("td",{parentName:"tr",align:"left"},"False"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Undefined"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Style of image")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},"disabled"),(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"boolean")),(0,o.kt)("td",{parentName:"tr",align:"left"},"False"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Undefined"),(0,o.kt)("td",{parentName:"tr",align:"left"},"Is button disabled")))),(0,o.kt)("h2",{id:"usage-example"},"Usage example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"jsx",jsx:!0},"    const [photo, setPhoto] = useState<ImageURISource | null>(null);\n\n    const onRemoveImage = useCallback(() => {\n        setPhoto(null);\n    }, [setPhoto]);\n\n    const onImagePicked = useCallback(\n        (nextImage) => {\n            setPhoto({uri: nextImage.path});\n        },\n        [setPhoto],\n    );\n\n    return (\n        <ImageCropPickerButton \n            image={photo} \n            onRemoveImage={onRemoveImage} \n            onImagePicked={onImagePicked} \n            onPickerError={console.error} \n        />\n    );\n")))}g.isMDXComponent=!0}}]);