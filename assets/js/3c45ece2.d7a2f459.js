"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[447],{2925:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var s=o(5893),n=o(1151);const i={sidebar_position:2,title:"Storybook"},r=void 0,a={unversionedId:"testing/storybook",id:"testing/storybook",title:"Storybook",description:"Content",source:"@site/docs/testing/storybook.md",sourceDirName:"testing",slug:"/testing/storybook",permalink:"/react-native-template-strong/docs/testing/storybook",draft:!1,unlisted:!1,editUrl:"https://github.com/svbutko/react-native-template-strong/master/website/docs/testing/storybook.md",tags:[],version:"current",lastUpdatedAt:1633684154,formattedLastUpdatedAt:"Oct 8, 2021",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Storybook"},sidebar:"tutorialSidebar",previous:{title:"Jest",permalink:"/react-native-template-strong/docs/testing/jest"},next:{title:"Detox",permalink:"/react-native-template-strong/docs/testing/detox"}},d={},l=[{value:"Content",id:"content",level:2},{value:"Opening Storybook",id:"opening-storybook",level:2},{value:"Adding stories",id:"adding-stories",level:2},{value:"Plugins",id:"plugins",level:2}];function c(e){const t=Object.assign({h2:"h2",p:"p",a:"a",code:"code",pre:"pre",ul:"ul",li:"li"},(0,n.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"content",children:"Content"}),"\n",(0,s.jsx)(t.p,{children:"Storybook is a powerful frontend workshop environment tool that allows teams to design, build, and organize UI components (and even full screens!) without getting tripped up over business logic and plumbing."}),"\n",(0,s.jsxs)(t.p,{children:["To learn more about Storybook, check ",(0,s.jsx)(t.a,{href:"https://storybook.js.org/tutorials/intro-to-storybook/react-native/en/get-started/",children:"this page"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["All the stories are located in ",(0,s.jsx)(t.code,{children:"storybook"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["Each created story file should follow the next template: ",(0,s.jsx)(t.code,{children:"testName.stories.tsx"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"opening-storybook",children:"Opening Storybook"}),"\n",(0,s.jsx)(t.p,{children:"To open Storybook in debug mode, shake your device to open dev. menu and at the very bottom you can see Storybook."}),"\n",(0,s.jsx)(t.p,{children:"The overlay will open where you can see individual stories."}),"\n",(0,s.jsx)(t.h2,{id:"adding-stories",children:"Adding stories"}),"\n",(0,s.jsxs)(t.p,{children:["If it's a component then you can add it to ",(0,s.jsx)(t.code,{children:"Components.stories.tsx"})," by following the same structure defined there."]}),"\n",(0,s.jsxs)(t.p,{children:["If you'd like to create a separate stories, then create a file in the ",(0,s.jsx)(t.code,{children:"storybook/stories"})," folder with proper naming."]}),"\n",(0,s.jsxs)(t.p,{children:["Create a stories' module (as example I will use ",(0,s.jsx)(t.code,{children:"Components"}),":"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-typescript",metastring:"jsx",children:'const ComponentsStories = storiesOf("Components", module);\n'})}),"\n",(0,s.jsx)(t.p,{children:"Add your stories into it:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-typescript",metastring:"jsx",children:'ComponentsStories.add("PrimaryButton", () => <PrimaryButtonStories />);\n\nComponentsStories.add("PrimaryTextInput", () => <PrimaryTextInputStories />);\n\nComponentsStories.add("RadioButton", () => <RadioButtonStories />);\n'})}),"\n",(0,s.jsxs)(t.p,{children:["And don't forget to require it in ",(0,s.jsx)(t.code,{children:"storybook/stories.ts"}),":"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-typescript",metastring:"jsx",children:'if (__DEV__) {\n  require("./stories/Theme.stories");\n  require("./stories/Formatter.stories");\n  require("./stories/Resources.stories");\n  require("./stories/Components.stories");\n  require("./stories/ModalsOverlays.stories");\n  require("./stories/Alerts.stories");\n}\n\nexport {};\n'})}),"\n",(0,s.jsx)(t.h2,{id:"plugins",children:"Plugins"}),"\n",(0,s.jsx)(t.p,{children:"There two plugins installed at this moment in this template:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"@storybook/addon-ondevice-actions"})," - mock ",(0,s.jsx)(t.code,{children:"onPress"})," calls with actions that will log information in the actions tab"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"@storybook/addon-ondevice-knobs"})," -  adjust your components props in realtime"]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["You can check ",(0,s.jsx)(t.a,{href:"https://storybook.js.org/addons/@storybook/addon-ondevice-actions",children:"this page"})," about plugins usage."]})]})}const p=function(e={}){const{wrapper:t}=Object.assign({},(0,n.ah)(),e.components);return t?(0,s.jsx)(t,Object.assign({},e,{children:(0,s.jsx)(c,e)})):c(e)}},1151:(e,t,o)=>{o.d(t,{Zo:()=>a,ah:()=>i});var s=o(7294);const n=s.createContext({});function i(e){const t=s.useContext(n);return s.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}const r={};function a({components:e,children:t,disableParentContext:o}){let a;return a=o?"function"==typeof e?e({}):e||r:i(e),s.createElement(n.Provider,{value:a},t)}}}]);