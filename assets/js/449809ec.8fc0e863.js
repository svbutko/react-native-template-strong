"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2544],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(r),m=a,f=p["".concat(s,".").concat(m)]||p[m]||d[m]||o;return r?n.createElement(f,l(l({ref:t},u),{},{components:r})):n.createElement(f,l({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},7161:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return d}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),l=["components"],i={sidebar_position:2,title:"listHandlers"},s=void 0,c={unversionedId:"utils/list-handlers",id:"utils/list-handlers",title:"listHandlers",description:"commonListFulfilledHandler",source:"@site/docs/utils/list-handlers.md",sourceDirName:"utils",slug:"/utils/list-handlers",permalink:"/react-native-template-strong/docs/utils/list-handlers",editUrl:"https://github.com/svbutko/react-native-template-strong/master/website/docs/utils/list-handlers.md",tags:[],version:"current",lastUpdatedAt:1633280321,formattedLastUpdatedAt:"10/3/2021",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"listHandlers"},sidebar:"tutorialSidebar",previous:{title:"newState",permalink:"/react-native-template-strong/docs/utils/new-state"},next:{title:"URL openers",permalink:"/react-native-template-strong/docs/utils/url-openers"}},u={},d=[{value:"commonListFulfilledHandler",id:"commonlistfulfilledhandler",level:2}],p={toc:d};function m(e){var t=e.components,r=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"commonlistfulfilledhandler"},"commonListFulfilledHandler"),(0,o.kt)("p",null,"Used primarily in redux slices' fulfilled functions to merge or replace the current list with new data based on ",(0,o.kt)("inlineCode",{parentName:"p"},"LoadState"),"."),(0,o.kt)("p",null,"First parameter is ",(0,o.kt)("inlineCode",{parentName:"p"},"LoadState")," which comes as meta argument."),(0,o.kt)("p",null,"Second parameter is array of new items which comes as payload of API call or your changes."),(0,o.kt)("p",null,"Third parameter is your current state data array."),(0,o.kt)("p",null,"As a result, it will produce merged or new array of data, will set ",(0,o.kt)("inlineCode",{parentName:"p"},"error")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"null")," and will update ",(0,o.kt)("inlineCode",{parentName:"p"},"LoadState")," based on the payload array size."),(0,o.kt)("p",null,"Example of usage:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"function ordersFulfilledHandler(state: OrdersState, payloadAction: OrdersGetPayloadAction) {\n    const {data, error, loadState} = commonListFulfilledHandler(payloadAction.meta.arg, payloadAction.payload.orders, state.data);\n\n    return newState(state, {loadState, error, data});\n}\n")))}m.isMDXComponent=!0}}]);