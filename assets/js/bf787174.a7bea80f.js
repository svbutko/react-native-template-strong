"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9721],{3905:function(t,e,n){n.d(e,{Zo:function(){return p},kt:function(){return f}});var r=n(7294);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,r,o=function(t,e){if(null==t)return{};var n,r,o={},i=Object.keys(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var l=r.createContext({}),c=function(t){var e=r.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},p=function(t){var e=c(t.components);return r.createElement(l.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var n=t.components,o=t.mdxType,i=t.originalType,l=t.parentName,p=s(t,["components","mdxType","originalType","parentName"]),d=c(n),f=o,m=d["".concat(l,".").concat(f)]||d[f]||u[f]||i;return n?r.createElement(m,a(a({ref:e},p),{},{components:n})):r.createElement(m,a({ref:e},p))}));function f(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var i=n.length,a=new Array(i);a[0]=d;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=t,s.mdxType="string"==typeof t?t:o,a[1]=s;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},944:function(t,e,n){n.r(e),n.d(e,{assets:function(){return p},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return u}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],s={sidebar_position:4,title:"Roots"},l=void 0,c={unversionedId:"navigation/roots",id:"navigation/roots",title:"Roots",description:"Content",source:"@site/docs/navigation/roots.md",sourceDirName:"navigation",slug:"/navigation/roots",permalink:"/react-native-template-strong/docs/navigation/roots",editUrl:"https://github.com/svbutko/react-native-template-strong/master/website/docs/navigation/roots.md",tags:[],version:"current",lastUpdatedAt:1633518181,formattedLastUpdatedAt:"10/6/2021",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"Roots"},sidebar:"tutorialSidebar",previous:{title:"Pages",permalink:"/react-native-template-strong/docs/navigation/pages"},next:{title:"Overlays and modals",permalink:"/react-native-template-strong/docs/navigation/overlays-and-modals"}},p={},u=[{value:"Content",id:"content",level:2},{value:"Starting root",id:"starting-root",level:2},{value:"Switching roots",id:"switching-roots",level:2}],d={toc:u};function f(t){var e=t.components,n=(0,o.Z)(t,a);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"content"},"Content"),(0,i.kt)("p",null,"The root is where the application layout structure is defined. It is typically the first UI element a user interacts with. "),(0,i.kt)("p",null,"The root can be changed multiple times during the lifespan of the application. "),(0,i.kt)("p",null,"For example, if an app requires users to login, it's common to use a stack-based root and transition to either tabs- or SideMenu-based root if login is successful."),(0,i.kt)("p",null,"Roots are located in ",(0,i.kt)("inlineCode",{parentName:"p"},"src/navigation/roots.ts"),"."),(0,i.kt)("p",null,"Each root is being exported separately."),(0,i.kt)("h2",{id:"starting-root"},"Starting root"),(0,i.kt)("p",null,"The starting root is ",(0,i.kt)("inlineCode",{parentName:"p"},"setInitialRoot")," which shows ",(0,i.kt)("inlineCode",{parentName:"p"},"Splash"),"."),(0,i.kt)("h2",{id:"switching-roots"},"Switching roots"),(0,i.kt)("p",null,"As shown in ",(0,i.kt)("inlineCode",{parentName:"p"},"Splash")," based on whether user opened application first time or second time it switches the root to ",(0,i.kt)("inlineCode",{parentName:"p"},"tabs")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"onboarding"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"jsx",jsx:!0},"export const Splash: NavigationFunctionComponent = () => {\n  const isOnboardingVisited = useAppSelector((state) => state.system.isOnboardingVisited);\n\n  useEffect(() => {\n    if (isOnboardingVisited) {\n      setTabsRoot();\n    } else if (isIos) {\n      setTabsRoot(showOnboarding);\n    } else {\n      setOnboardingRoot();\n    }\n  }, [isOnboardingVisited]);\n\n  return <LoadingComponent />;\n};\n")))}f.isMDXComponent=!0}}]);