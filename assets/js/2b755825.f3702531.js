"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[962],{9376:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>c,toc:()=>r});var n=a(5893),o=a(1151);const s={sidebar_position:3,title:"Change language"},i=void 0,c={id:"localisation/change-language",title:"Change language",description:"There are two ways you can change language of your app.",source:"@site/docs/localisation/change-language.md",sourceDirName:"localisation",slug:"/localisation/change-language",permalink:"/react-native-template-strong/docs/localisation/change-language",draft:!1,unlisted:!1,editUrl:"https://github.com/svbutko/react-native-template-strong/master/website/docs/localisation/change-language.md",tags:[],version:"current",lastUpdatedAt:1633405147,formattedLastUpdatedAt:"Oct 5, 2021",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Change language"},sidebar:"tutorialSidebar",previous:{title:"Add language",permalink:"/react-native-template-strong/docs/localisation/add-language"},next:{title:"Date formatter",permalink:"/react-native-template-strong/docs/localisation/date-formatter"}},l={},r=[{value:"Recommended way",id:"recommended-way",level:2},{value:"Not recommended way",id:"not-recommended-way",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",p:"p",...(0,o.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"There are two ways you can change language of your app."}),"\n",(0,n.jsx)(t.h2,{id:"recommended-way",children:"Recommended way"}),"\n",(0,n.jsx)(t.p,{children:"If you correctly added languages for both Android and iOS, there will be an option in app's system settings to switch the language."}),"\n",(0,n.jsx)(t.p,{children:"Describe the process of changing language to user and create a button which will lead him to app's settings."}),"\n",(0,n.jsxs)(t.p,{children:["Use ",(0,n.jsx)(t.code,{children:"openSettings"})," method of ",(0,n.jsx)(t.a,{href:"https://reactnative.dev/docs/linking#opensettings",children:"Linking"})," to open settings."]}),"\n",(0,n.jsxs)(t.p,{children:["There will be ",(0,n.jsx)(t.code,{children:"PREFERRED LANGUAGE"}),", user can tap on it and switch to another available language."]}),"\n",(0,n.jsx)(t.h2,{id:"not-recommended-way",children:"Not recommended way"}),"\n",(0,n.jsxs)(t.p,{children:["You can change the language in app, using ",(0,n.jsx)(t.code,{children:"setLanguage"})," function from ",(0,n.jsx)(t.code,{children:"localization.ts"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["You can list available languages for and user to select and when selected, call ",(0,n.jsx)(t.code,{children:"setLanguage"})," with selected language."]}),"\n",(0,n.jsxs)(t.p,{children:["But with this way you also have to store the saved value in ",(0,n.jsx)(t.code,{children:"redux"})," store because for system your app still uses the previously selected language,\nand also apply it on app start every time."]})]})}function u(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},1151:(e,t,a)=>{a.d(t,{Z:()=>c,a:()=>i});var n=a(7294);const o={},s=n.createContext(o);function i(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);