"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3793],{3905:function(t,e,n){n.d(e,{Zo:function(){return m},kt:function(){return f}});var r=n(7294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function l(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},i=Object.keys(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var p=r.createContext({}),d=function(t){var e=r.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):l(l({},e),t)),n},m=function(t){var e=d(t.components);return r.createElement(p.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},u=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,i=t.originalType,p=t.parentName,m=o(t,["components","mdxType","originalType","parentName"]),u=d(n),f=a,s=u["".concat(p,".").concat(f)]||u[f]||c[f]||i;return n?r.createElement(s,l(l({ref:e},m),{},{components:n})):r.createElement(s,l({ref:e},m))}));function f(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var i=n.length,l=new Array(i);l[0]=u;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o.mdxType="string"==typeof t?t:a,l[1]=o;for(var d=2;d<i;d++)l[d]=n[d];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7999:function(t,e,n){n.r(e),n.d(e,{assets:function(){return m},contentTitle:function(){return p},default:function(){return f},frontMatter:function(){return o},metadata:function(){return d},toc:function(){return c}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),l=["components"],o={sidebar_position:2,title:"PrimaryTextInput"},p=void 0,d={unversionedId:"components/primary-text-input",id:"components/primary-text-input",title:"PrimaryTextInput",description:"Content",source:"@site/docs/components/primary-text-input.md",sourceDirName:"components",slug:"/components/primary-text-input",permalink:"/react-native-template-strong/docs/components/primary-text-input",editUrl:"https://github.com/svbutko/react-native-template-strong/master/website/docs/components/primary-text-input.md",tags:[],version:"current",lastUpdatedAt:1634026274,formattedLastUpdatedAt:"10/12/2021",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"PrimaryTextInput"},sidebar:"tutorialSidebar",previous:{title:"PrimaryButton",permalink:"/react-native-template-strong/docs/components/primary-button"},next:{title:"Separator",permalink:"/react-native-template-strong/docs/components/separator"}},m={},c=[{value:"Content",id:"content",level:2},{value:"Params",id:"params",level:2}],u={toc:c};function f(t){var e=t.components,n=(0,a.Z)(t,l);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"content"},"Content"),(0,i.kt)("p",null,"Primary text input component which should be used in project.\nIt supports masks (provided by ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/benhurott/react-native-masked-text"},"react-native-masked-text"),")."),(0,i.kt)("h2",{id:"params"},"Params"),(0,i.kt)("p",null,"Extends ",(0,i.kt)("inlineCode",{parentName:"p"},"TextInputProps")," and additionally adds next properties"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"nextInputFocusRef"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"MutableRefObject<any>")),(0,i.kt)("td",{parentName:"tr",align:"left"},"False"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Undefined"),(0,i.kt)("td",{parentName:"tr",align:"left"},"If provided then when ",(0,i.kt)("inlineCode",{parentName:"td"},"onSubmitEditing")," fires focuses on next input")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"inputRef"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Ref<any>")),(0,i.kt)("td",{parentName:"tr",align:"left"},"False"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Undefined"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Reference of ",(0,i.kt)("inlineCode",{parentName:"td"},"TextInput"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"containerStyle"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"ViewStyle")),(0,i.kt)("td",{parentName:"tr",align:"left"},"False"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Undefined"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Style of container")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"label"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},"False"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Undefined"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Style of container")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"error"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string or null")),(0,i.kt)("td",{parentName:"tr",align:"left"},"False"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Undefined"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Error which will be shown under the input")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"hint"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},"False"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Undefined"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Hint which will be shown under the input")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"mask"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"ITextInputMask")),(0,i.kt)("td",{parentName:"tr",align:"left"},"False"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Undefined"),(0,i.kt)("td",{parentName:"tr",align:"left"},"Mask which should be applied to the input")))))}f.isMDXComponent=!0}}]);