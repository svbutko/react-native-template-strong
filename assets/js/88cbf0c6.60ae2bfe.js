"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3561],{7294:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>i,contentTitle:()=>d,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var t=n(4848),a=n(8453);const s={sidebar_position:6,title:"AsyncThunk"},d=void 0,o={id:"redux/async-thunk",title:"AsyncThunk",description:"Content",source:"@site/docs/redux/async-thunk.md",sourceDirName:"redux",slug:"/redux/async-thunk",permalink:"/react-native-template-strong/docs/redux/async-thunk",draft:!1,unlisted:!1,editUrl:"https://github.com/svbutko/react-native-template-strong/master/website/docs/redux/async-thunk.md",tags:[],version:"current",lastUpdatedAt:168909824e4,sidebarPosition:6,frontMatter:{sidebar_position:6,title:"AsyncThunk"},sidebar:"tutorialSidebar",previous:{title:"Slice",permalink:"/react-native-template-strong/docs/redux/slice"},next:{title:"Hooks",permalink:"/react-native-template-strong/docs/redux/hooks"}},i={},c=[{value:"Content",id:"content",level:2},{value:"Creation",id:"creation",level:2},{value:"Slice handlers",id:"slice-handlers",level:2},{value:"Promise result handlers",id:"promise-result-handlers",level:2}];function l(e){const r={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h2,{id:"content",children:"Content"}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"AsyncThunks"})," as well as ",(0,t.jsx)(r.code,{children:"Slices"})," are stored together for better readability and remove need to have additional imports."]}),"\n",(0,t.jsxs)(r.p,{children:["To demonstrate how to create and use it, I will be using some ",(0,t.jsx)(r.code,{children:"Orders"})," state and ",(0,t.jsx)(r.code,{children:"ordersApi"})," as example."]}),"\n",(0,t.jsx)(r.h2,{id:"creation",children:"Creation"}),"\n",(0,t.jsxs)(r.p,{children:["Creation of ",(0,t.jsx)(r.code,{children:"AsyncThunk"})," is the same as in original documentation with usage of typed ",(0,t.jsx)(r.code,{children:"state"})," and ",(0,t.jsx)(r.code,{children:"dispatch"}),", with your API call do the following:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-typescript",children:'export const takeOrder = createAppAsyncThunk("orders/take", async (id: string) => {\n  return await ordersApi.takeOrder(id);\n});\n'})}),"\n",(0,t.jsxs)(r.p,{children:["Where ",(0,t.jsx)(r.code,{children:'"orders/take""'})," is name of your slice and name of your method."]}),"\n",(0,t.jsx)(r.h2,{id:"slice-handlers",children:"Slice handlers"}),"\n",(0,t.jsx)(r.p,{children:"You can handle the result inline or as I like with functions, all together it looks like this:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-typescript",children:'export const takeOrder = createAppAsyncThunk("order/take", async (id: string) => {\n  return await ordersApi.takeOrder(id);\n});\n\nfunction rehydrate(state: OrderState, rehydrateParams: RehydrateAppAction) {\n  return newState(rehydrateParams.payload?.orders || state, {});\n}\n\nfunction orderActionPendingHandler(state: OrderState, params: ReturnType<typeof takeOrder.pending>) {\n  return newState(state, {isLoading: true, error: null});\n}\n\nfunction takeOrderFulfilledHandler(state: OrderState, params: ReturnType<typeof takeOrder.fulfilled>) {\n  return newState(state, {isLoading: false, error: null, order: params.payload});\n}\n\nfunction orderActionRejectedHandler(state: OrderState, params: ReturnType<typeof takeOrder.rejected>) {\n  return newState(state, {isLoading: false, error: params.error.message});\n}\n\nexport const {reducer: OrderReducer} = createSlice({\n  name: "order",\n  initialState: OrdersInitialState,\n  extraReducers: (builder) => {\n    builder\n      .addCase(REHYDRATE, rehydrate)\n      .addCase(takeOrder.pending, orderActionPendingHandler)\n      .addCase(takeOrder.fulfilled, takeOrderFulfilledHandler)\n      .addCase(takeOrder.rejected, orderActionRejectedHandler);\n  },\n});\n'})}),"\n",(0,t.jsx)(r.h2,{id:"promise-result-handlers",children:"Promise result handlers"}),"\n",(0,t.jsx)(r.p,{children:"To handle promise results in pages/components (i.e. show error toast, show error in input, show success toast etc.)\nwe can handle it the following way:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-typescript",children:"  const onTakeOrderPress = useCallback(() => {\n    handlePromiseResult(dispatch(takeOrder(orderId)), localization.common.orderHasBeenSuccessfullyTaken);\n  }, [dispatch, orderId]);\n"})}),"\n",(0,t.jsxs)(r.p,{children:["To check more about ",(0,t.jsx)(r.code,{children:"handlePromiseResult"})," read more ",(0,t.jsx)(r.a,{href:"/react-native-template-strong/docs/validations",children:"here"}),"."]})]})}function u(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>d,x:()=>o});var t=n(6540);const a={},s=t.createContext(a);function d(e){const r=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:d(e.components),t.createElement(s.Provider,{value:r},e.children)}}}]);