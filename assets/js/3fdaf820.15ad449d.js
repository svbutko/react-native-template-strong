"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[759],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),m=o,g=u["".concat(s,".").concat(m)]||u[m]||d[m]||r;return n?a.createElement(g,i(i({ref:t},p),{},{components:n})):a.createElement(g,i({ref:t},p))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<r;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6968:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var a=n(7462),o=(n(7294),n(3905));const r={sidebar_position:1,title:"Translations"},i=void 0,l={unversionedId:"localisation/translations",id:"localisation/translations",title:"Translations",description:"Localisation is made possible by react-native-localization.",source:"@site/docs/localisation/translations.md",sourceDirName:"localisation",slug:"/localisation/translations",permalink:"/react-native-template-strong/docs/localisation/translations",draft:!1,editUrl:"https://github.com/svbutko/react-native-template-strong/master/website/docs/localisation/translations.md",tags:[],version:"current",lastUpdatedAt:1633405147,formattedLastUpdatedAt:"Oct 5, 2021",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Translations"},sidebar:"tutorialSidebar",previous:{title:"useWhyDidYouUpdate",permalink:"/react-native-template-strong/docs/hooks/use-why-did-you-update"},next:{title:"Add language",permalink:"/react-native-template-strong/docs/localisation/add-language"}},s={},c=[{value:"Content",id:"content",level:2},{value:"Usage",id:"usage",level:2},{value:"Translations structure",id:"translations-structure",level:2},{value:"Add translation",id:"add-translation",level:2},{value:"Default language",id:"default-language",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Localisation is made possible by ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/stefalda/ReactNativeLocalization"},"react-native-localization"),"."),(0,o.kt)("h2",{id:"content"},"Content"),(0,o.kt)("p",null,"Localization file are located at ",(0,o.kt)("inlineCode",{parentName:"p"},"/src/common/localization/localization.ts"),"."),(0,o.kt)("p",null,"It has translation methods and the constant object which holds all the translations:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"export const localization = {\n  common: new LocalizedStrings(commonLocalization),\n  errors: new LocalizedStrings(errorsLocalization),\n  empty: new LocalizedStrings(emptyLocalization),\n  pages: new LocalizedStrings(pagesLocalization),\n  onboarding: new LocalizedStrings(onboardingLocalization),\n};\n")),(0,o.kt)("p",null,"Translations itself are located in ",(0,o.kt)("inlineCode",{parentName:"p"},"/src/common/localization/translations"),"."),(0,o.kt)("p",null,"Each translation file is represented by simple constant object which holds languages as properties which hold translations strings."),(0,o.kt)("p",null,"Common localization:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'export const commonLocalization = {\n  en: {\n    search: "Search",\n    selectPhoto: "Select a photo",\n    takePhoto: "Take a photo",\n    chooseFromLibrary: "Choose from library",\n    cancel: "Cancel",\n    reject: "Reject",\n    delete: "Delete",\n    back: "Back",\n    next: "Next",\n    done: "Done",\n    ok: "Ok",\n    continue: "Continue",\n    save: "Save",\n    loading: "Loading",\n    photo: "Photo",\n    yes: "Yes",\n    no: "No",\n    areYouSure: "Are you sure?",\n    warning: "Warning",\n    success: "Success",\n    select: "Select",\n    dataSuccessfullyUpdated: "Data has been successfully updated",\n    settings: "Settings",\n  },\n};\n')),(0,o.kt)("p",null,"It can be string or function."),(0,o.kt)("p",null,"Function example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'    stops: (stopsCount: number) => {\n      return stopsCount + (stopsCount > 1 ? " stops" : " stop");\n    },\n    km: (distance: string | number) => {\n      return distance + " km";\n    },\n')),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("p",null,"Import the localization constant and use needed translation string:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"jsx",jsx:!0},"<Text style={CommonStyles.normalText} numberOfLines={1}>\n    {localization.common.loading}\n</Text>\n")),(0,o.kt)("h2",{id:"translations-structure"},"Translations structure"),(0,o.kt)("p",null,"The structure is pretty simple:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"commonLocalization.ts")," - contains common strings like yes, no, loading etc."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"emptyLocalization.ts")," - contains strings for empty cases like No data, nothing was found etc."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"errorsLocalization.ts")," - contains error related strings"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"pagesLocalization.ts")," - contains pages, tabs, modals, overlays titles")),(0,o.kt)("p",null,"Then there are pages specific localization strings:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"onboardingLocalization.ts")," - contains strings needed for Onboarding")),(0,o.kt)("h2",{id:"add-translation"},"Add translation"),(0,o.kt)("p",null,"Based on what your specific need is (page, common, error etc.) selected the translation file or create one if it's for a page."),(0,o.kt)("p",null,"If you created a file, don't forget to add it into ",(0,o.kt)("inlineCode",{parentName:"p"},"localization")," constant."),(0,o.kt)("p",null,"Then add a translation string to every language that you have."),(0,o.kt)("h2",{id:"default-language"},"Default language"),(0,o.kt)("p",null,"By default, there's only English language present in the template."),(0,o.kt)("p",null,"The first language which goes in translation files is going to be the default one."))}d.isMDXComponent=!0}}]);